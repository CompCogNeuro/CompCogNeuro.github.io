// Code generated by "core generate -add-types -add-funcs"; DO NOT EDIT.

package urakubo

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.AMPARVars", IDName: "ampar-vars", Doc: "AMPARVars have AMPAR Phosphorylation (Pd = phosphorylated, Dp = dephosphorylated) state.\nTwo protein elements, separately Pd and Dp:\nAMPAR = AMPA receptor (GluR1), which can be Pd at Ser845 by PKA\nPDZs = PDZ domain binding proteins (e.g., SAP97 and stargazin), which bind to AMPAR\n\n\tand are separately Pd by CaMKII -- denoted as StgP in Urakubo code\n\nBoth can be Dp by PP1 and CaN (calcineurin)\nVariables named as P or D for the Pd or Dp state, 1st is AMPAR @ Ser845, 2nd is PDZs", Fields: []types.Field{{Name: "DD", Doc: "both dephosphorylated = Nophos"}, {Name: "PD", Doc: "AMPA Ser845 phosphorylated by PKA = S845P"}, {Name: "DP", Doc: "PDZs phosphorylated by CaMKII = StgP"}, {Name: "PP", Doc: "both phosphorylated = S845PStgP"}, {Name: "Tot", Doc: "total of all phos levels"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.AMPARState", IDName: "ampar-state", Doc: "AMPARState is AMPAR Phosphorylation and trafficking state.\n4 Locations / states, which have their own time constants:\nInt = Cytosol, internal not integrated into membrane -- after endocyctosis\nMbr = Cytosol, integrated into the membrane -- after exocytosis, still governed by Cyl rates\nPSD = In the postsynaptic density, but not trapped by scaffold\nTrp = Trapped by scaffolding in the PSD -- solidly fixed in place and active\nTrp.Tot is the net effective AMPA conductance\n20 state vars total", Fields: []types.Field{{Name: "Int", Doc: "cytosol internal"}, {Name: "Mbr", Doc: "cytosol exocytosed into the membrane"}, {Name: "PSD", Doc: "in PSD but not trapped"}, {Name: "Trp", Doc: "in PSD and trapped in place -- this is the effective weight"}, {Name: "Scaffold", Doc: "amount of unbound scaffold used for trapping"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.AMPARPhosParams", IDName: "ampar-phos-params", Doc: "AMPAR phosphorylation and trafficking parameters\nOriginal kinetic rate constants are in units of (μM-1s-1),", Fields: []types.Field{{Name: "PKA", Doc: "rate of phosphorylation of AMPA Ser845 by PKA"}, {Name: "CaMKII", Doc: "rate of phosphorylation of PDZs by CaMKII"}, {Name: "PP_S845", Doc: "rate of dephosphorylation of AMPA Ser845 by PP1"}, {Name: "PP_PDZs", Doc: "rate of dephosphorylation of PDZs by PP1"}, {Name: "CaN_S845", Doc: "rate of dephosphorylation of AMPA Ser845 by CaN"}, {Name: "CaN_PDZs", Doc: "rate of dephosphorylation of PDZs by CaN"}, {Name: "PP2A_S845", Doc: "rate of dephosphorylation of AMPA Ser845 by PP2A"}, {Name: "PP2A_PDZs", Doc: "rate of dephosphorylation of PDZs by PP2A"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.AMPARTrafParams", IDName: "ampar-traf-params", Doc: "AMPAR trafficking parameters\nOriginal kinetic rate constants are in units of (μM-1s-1),", Fields: []types.Field{{Name: "EndoExoP", Doc: "Ser845P endocytosis, excocytosis rates -- Kf = 30min, Kb = 9min"}, {Name: "EndoD", Doc: "Ser845D endocytosis rate -- Kf = 1sec, Kb = 0"}, {Name: "TrapP", Doc: "PDZsP trapping in the PSD -- faster when P -- Kf is PSD + Scaffold -> Trp, Kb reverse"}, {Name: "TrapD", Doc: "PDZsD trapping in the PSD -- slower when D -- Kf is PSD + Scaffold -> Trp, Kb reverse"}, {Name: "Diffuse", Doc: "diffusion for each category, all have the same constant"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.AMPARParams", IDName: "ampar-params", Doc: "AMPAR phosphorylation and trafficking parameters\nOriginal kinetic rate constants are in units of (μM-1s-1),\nconverted to msec instead of sec", Fields: []types.Field{{Name: "Phos", Doc: "Phosphorylation parameters"}, {Name: "Traffic", Doc: "Trafficking parameters"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaState", IDName: "ca-state", Doc: "CaState records the Ca levels\n2 state vars total", Fields: []types.Field{{Name: "Cyt", Doc: "in cytosol"}, {Name: "PSD", Doc: "in PSD"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaParams", IDName: "ca-params", Doc: "CaParams manages Ca parameters including soft buffering dynamics of calcium", Fields: []types.Field{{Name: "CytBuffer", Doc: "Ca buffering in the cytosol"}, {Name: "PSDBuffer", Doc: "Ca buffering in the PSD"}, {Name: "Diffuse", Doc: "Ca diffusion between Cyt and PSD"}, {Name: "InjectCa", Doc: "extra Ca injection values in N terms -- see SetInject for concentration.\nBe sure to zero or update as needed"}, {Name: "Clamp", Doc: "clamp ca by fixed values"}, {Name: "ClampCa", Doc: "clamped Ca values -- in N terms -- see SetClamp for concentration"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaMVars", IDName: "ca-m-vars", Doc: "CaMVars are intracellular Ca-driven signaling states for CaM binding with Ca\nFrom Urakubo: Ca2+ binding kinetics of CaM has extensively been analyzed\n(Linse et al., 1991; Holmes, 2000). CaM binds to four Ca2+ ions,\nbut two or three Ca2+-binding is enough to activate CaM\n(James et al., 1995; Chin and Means, 2000).\nFor simplicity, 3Ca2+⋅CaM is assumed to be an active form,\nand reactions for 4Ca2+⋅CaM are omitted.", Fields: []types.Field{{Name: "CaM", Doc: "increasing levels of Ca binding to CaM, 0-3, [3] is active form"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaMState", IDName: "ca-m-state", Doc: "CaMState is overall intracellular Ca-driven signaling states\nfor CaM in Cyt and PSD\n32 state vars total", Fields: []types.Field{{Name: "Cyt", Doc: "in cytosol -- volume = 0.08 fl = 48"}, {Name: "PSD", Doc: "in PSD -- volume = 0.02 fl = 12"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaMParams", IDName: "ca-m-params", Doc: "CaMParams are the parameters governing the Ca+CaM binding", Fields: []types.Field{{Name: "CaCaM01", Doc: "1: Ca+CaM -> 1CaCaM = CaM-bind-Ca"}, {Name: "CaCaM12", Doc: "2: Ca+1CaM -> 2CaCaM = CaMCa-bind-Ca"}, {Name: "CaCaM23", Doc: "3: Ca+2CaM -> 3CaCaM = CaMCa2-bind-Ca"}, {Name: "CaMDiffuse", Doc: "CaM diffusion between Cyt and PSD"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaCaMKIIVars", IDName: "ca-ca-mkii-vars", Doc: "CaCaMKIIVars are intracellular Ca-driven signaling variables for the\nCaMKII+CaM binding -- each can have different numbers of Ca bound\nDupont = DupontHouartDekonnick03, has W* terms used in Genesis code\nstores N values -- Co = Concentration computed by volume as needed", Fields: []types.Field{{Name: "CaM_CaMKII", Doc: "CaMKII-CaM bound together = WBn in Dupont"}, {Name: "CaM_CaMKIIP", Doc: "CaMKIIP-CaM bound together, P = phosphorylated at Thr286 = WTn in Dupont"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.AutoPVars", IDName: "auto-p-vars", Doc: "AutoPVars hold the auto-phosphorylation variables, for CaMKII", Fields: []types.Field{{Name: "Act", Doc: "total active CaMKII"}, {Name: "Total", Doc: "total CaMKII across all states"}, {Name: "K", Doc: "rate constant for further autophosphorylation as function of current state"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaMKIIVars", IDName: "ca-mkii-vars", Doc: "CaMKIIVars are intracellular Ca-driven signaling states\nfor CaMKII binding and phosphorylation with CaM + Ca\nDupont = DupontHouartDekonnick03, has W* terms used in Genesis code\nstores N values -- Co = Concentration computed by volume as needed", Fields: []types.Field{{Name: "Ca", Doc: "increasing levels of Ca binding, 0-3"}, {Name: "CaMKII", Doc: "unbound CaMKII = CaM kinase II -- WI in Dupont -- this is the inactive form for NMDA GluN2B binding"}, {Name: "CaMKIIP", Doc: "unbound CaMKII P = phosphorylated at Thr286 -- shown with * in Figure S13 = WA in Dupont -- this is the active form for NMDA GluN2B binding"}, {Name: "PP1Thr286C", Doc: "PP1+CaMKIIP complex for PP1Thr286 enzyme reaction"}, {Name: "PP2AThr286C", Doc: "PP2A+CaMKIIP complex for PP2AThr286 enzyme reaction"}, {Name: "Auto", Doc: "auto-phosphorylation state"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaMKIIState", IDName: "ca-mkii-state", Doc: "CaMKIIState is overall intracellular Ca-driven signaling states\nfor CaMKII in Cyt and PSD\n28 state vars total", Fields: []types.Field{{Name: "Cyt", Doc: "in cytosol -- volume = 0.08 fl = 48"}, {Name: "PSD", Doc: "in PSD -- volume = 0.02 fl = 12"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaMKIIParams", IDName: "ca-mkii-params", Doc: "CaMKIIParams are the parameters governing the Ca+CaM binding", Fields: []types.Field{{Name: "CaCaM01", Doc: "1: Ca+CaM-CaMKII -> 1CaCaM-CaMKII = CaM-bind-Ca"}, {Name: "CaCaM12", Doc: "2: Ca+1CaM-CaMKII -> 2CaCaM-CaMKII = CaMCa-bind-Ca"}, {Name: "CaCaM23", Doc: "6: Ca+2CaCaM-CaMKII -> 3CaCaM-CaMKII = CaMCa2-bind-Ca"}, {Name: "CaMCaMKII", Doc: "4: CaM+CaMKII -> CaM-CaMKII [0-2] -- kIB_kBI_[0-2] -- WI = plain CaMKII, WBn = CaM bound"}, {Name: "CaMCaMKII3", Doc: "5: 3CaCaM+CaMKII -> 3CaCaM-CaMKII = kIB_kBI_3 -- active CaM binds strongly"}, {Name: "CaMCaMKIIP", Doc: "9: CaM+CaMKIIP -> CaM-CaMKIIP = kAT_kTA -- T286P causes strong CaM binding"}, {Name: "CaCaM_CaMKIIP", Doc: "8: Ca+nCaCaM-CaMKIIP -> n+1CaCaM-CaMKIIP = kTP_PT_*"}, {Name: "PP1Thr286", Doc: "10: PP1 dephosphorylating CaMKIIP"}, {Name: "PP2AThr286", Doc: "11: PP2A dephosphorylating CaMKIIP"}, {Name: "CaMKIIDiffuse", Doc: "CaMKII symmetric diffusion between Cyt and PSD -- only for WI"}, {Name: "CaMKIIPDiffuse", Doc: "CaMKIIP diffusion between Cyt and PSD -- asymmetric, everything else"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaNVars", IDName: "ca-n-vars", Doc: "CaNVars are intracellular Ca-driven signaling variables for the\nCaN and CaM binding, at different levels of Ca binding\nstores N values -- Co = Concentration computed by volume as needed", Fields: []types.Field{{Name: "CaN", Doc: "Calcineurin"}, {Name: "CaNCaM", Doc: "CaN-CaM bound"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaNCaMVars", IDName: "ca-n-ca-m-vars", Doc: "CaNCaMVars are intracellular Ca-driven signaling states\nfor CaN-CaM binding\nstores N values -- Co = Concentration computed by volume as needed", Fields: []types.Field{{Name: "Ca", Doc: "increasing levels of Ca binding, 0-2"}, {Name: "CaNact", Doc: "active CaN = Ca[2].CaNCaM"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaNState", IDName: "ca-n-state", Doc: "CaNState is overall intracellular Ca-driven signaling states\nfor CaN-CaM binding in Cyt and PSD\n14 state vars total", Fields: []types.Field{{Name: "Cyt", Doc: "in cytosol -- volume = 0.08 fl = 48"}, {Name: "PSD", Doc: "in PSD  -- volume = 0.02 fl = 12"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaNParams", IDName: "ca-n-params", Doc: "CaNParams are the parameters governing the Ca+CaN-CaM binding", Fields: []types.Field{{Name: "CaNCaM", Doc: "1: CaN+CaM -> CaN-CaM"}, {Name: "CaCaN01", Doc: "2: Ca+CaM -> CaCaM"}, {Name: "CaCaN12", Doc: "3: Ca+CaCaM -> 2CaCaM"}, {Name: "CaNDiffuse", Doc: "CaN diffusion between Cyt and PSD"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.ParamConfig", IDName: "param-config", Doc: "ParamConfig has config parameters related to sim params.", Fields: []types.Field{{Name: "Script", Doc: "Script is an interpreted script that is run to set parameters in Layer and Path\nsheets, by default using the \"Script\" set name."}, {Name: "Sheet", Doc: "Sheet is the extra params sheet name(s) to use (space separated\nif multiple). Must be valid name as listed in compiled-in params\nor loaded params."}, {Name: "Tag", Doc: "Tag is an extra tag to add to file names and logs saved from this run."}, {Name: "Note", Doc: "Note is additional info to describe the run params etc,\nlike a git commit message for the run."}, {Name: "SaveAll", Doc: "SaveAll will save a snapshot of all current param and config settings\nin a directory named params_<datestamp> (or _good if Good is true),\nthen quit. Useful for comparing to later changes and seeing multiple\nviews of current params."}, {Name: "Good", Doc: "Good is for SaveAll, save to params_good for a known good params state.\nThis can be done prior to making a new release after all tests are passing.\nAdd results to git to provide a full diff record of all params over level."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.RunConfig", IDName: "run-config", Doc: "RunConfig has config parameters related to running the sim.", Fields: []types.Field{{Name: "InitBaseline", Doc: "Use 500 sec pre-compiled baseline for initialization"}, {Name: "Trials", Doc: "Trials is the total number of trials of different random patterns to generate."}, {Name: "Cycles", Doc: "Cycles is the total number of cycles per trial: at least 200."}, {Name: "PlusCycles", Doc: "PlusCycles is the total number of plus-phase cycles per trial. For Cycles=300, use 100."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.LogConfig", IDName: "log-config", Doc: "LogConfig has config parameters related to logging data.", Fields: []types.Field{{Name: "Save", Doc: "Save has the list of levels to save log files for."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Config", IDName: "config", Doc: "Config has the overall Sim configuration options.", Fields: []types.Field{{Name: "Name", Doc: "Name is the short name of the sim."}, {Name: "Title", Doc: "Title is the longer title of the sim."}, {Name: "URL", Doc: "URL is a link to the online README or other documentation for this sim."}, {Name: "Doc", Doc: "Doc is brief documentation of the sim."}, {Name: "Includes", Doc: "Includes has a list of additional config files to include.\nAfter configuration, it contains list of include files added."}, {Name: "GUI", Doc: "GUI means open the GUI. Otherwise it runs automatically and quits,\nsaving results to log files."}, {Name: "Debug", Doc: "Debug reports debugging information."}, {Name: "Params", Doc: "Params has parameter related configuration options."}, {Name: "Run", Doc: "Run has sim running related configuration options."}, {Name: "Log", Doc: "Log has data logging related configuration options."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.NeuronEx", IDName: "neuron-ex", Doc: "Extra state for neuron -- Vgcc and AK", Fields: []types.Field{{Name: "VgccJcaPSD", Doc: "Vgcc Ca calcium contribution to PSD"}, {Name: "VgccJcaCyt", Doc: "Vgcc Ca calcium contribution to Cyt"}, {Name: "AKm", Doc: "AK M gate -- activates with increasing Vm"}, {Name: "AKh", Doc: "AK H gate -- deactivates with increasing Vm"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.NMDARState", IDName: "nmdar-state", Doc: "NMDARState holds NMDA receptor states, with allosteric dynamics\nfrom Urakubo et al, (2008)\nThe [3] arrays correspond to Nt0, Nt1, Nt2: plain NMDA, 2CaM phos, 3CaM phos", Fields: []types.Field{{Name: "Mg", Doc: "level of Mg block as a function of membrane potential: 1/(1 + (1.5/3.57)exp(-0.062*Vm)"}, {Name: "Vca", Doc: "voltage-dependent calcium flux driver: determines Jca as function of V, includes Mg factor"}, {Name: "Jca", Doc: "overall calcium current = Vca * Pca * Nopen"}, {Name: "G", Doc: "ionic conductance through the NMDA channel for driving Vm changes = Mg * GMax * Nopen"}, {Name: "N1", Doc: "Number in state 1"}, {Name: "N2", Doc: "Number in state 2"}, {Name: "N3", Doc: "Number in state 3"}, {Name: "N4", Doc: "Number in state 4"}, {Name: "No", Doc: "Number in Open state -- actually open to allow Ca to flow"}, {Name: "Nt0", Doc: "Total N of NMDAR plain = sum of 0 index in N* states"}, {Name: "Nt1", Doc: "Total N of NMDAR_2Ca2+CaM = sum of 1 index in N* states"}, {Name: "Nt2", Doc: "Total N of NMDAR_3Ca2+CaM = sum of 2 index in N* states"}, {Name: "Nopen", Doc: "Total N in open state = sum(No[0..2])"}, {Name: "Ntotal", Doc: "overall total -- should be conserved"}, {Name: "GluN2B", Doc: "number of available non-bound GluN2B S3103 binding sites.\nCaMKII and DAPK1 compete to bind here -- Ca/ÇaM induce CaMKII binding\nand Thr286 auto-phosphorylation maintains it,  while *de* phosphorylated DAPK1\nat Ser308 preferentially binds.\nThe number of each bound is tracked in the CaMKII and DAPK1 PSD states."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.NMDARParams", IDName: "nmdar-params", Doc: "NMDARParams holds parameters for NMDA receptor with allosteric dynamics\nfrom Urakubo et al, (2008)\nThe [3] arrays correspond to Nt0, Nt1, Nt2: plain NMDA, 2CaM, 3CaM", Fields: []types.Field{{Name: "Erev", Doc: "reversal potential for NMDARs"}, {Name: "Pca", Doc: "Normalization for Ca flux (pmol sec-1 mV-1)"}, {Name: "Gmax", Doc: "maximum conductance (nS)"}, {Name: "CaM1", Doc: "For N1 state, CaM + 2CaCaM reaction"}, {Name: "CaM2", Doc: "For N2 state, CaM + 2CaCaM reaction"}, {Name: "CaM3", Doc: "For N3 state, CaM + 2CaCaM reaction"}, {Name: "CaM4", Doc: "For N4 state, CaM + 2CaCaM reaction"}, {Name: "CaMo", Doc: "For No state, CaM + 2CaCaM reaction"}, {Name: "CaCaM23", Doc: "for all states, rate of Ca binding for 2Ca-CaM <-> 3Ca-CaM -- same rates as used in CaM code (25.6, 400)"}, {Name: "GluN12", Doc: "Glu binding driving N1 <-> N2 transitions"}, {Name: "GluN23", Doc: "Glu binding driving N2 <-> N3 transitions"}, {Name: "Glu", Doc: "Glu quantity (uM sec)"}, {Name: "GluN2BN", Doc: "total amount of GluN2B -- NMDAR is all done in normalized units,\nbut this needs to be in real units to interact with CaMKII and DAPK1 binding."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PKAVars", IDName: "pka-vars", Doc: "PKAVars are intracellular Ca-driven signaling states\nfor PKA binding and phosphorylation with cAMP\nstores N values -- Co = Concentration computed by volume as needed", Fields: []types.Field{{Name: "AC1", Doc: "AC1"}, {Name: "AC1act", Doc: "active AC1 = CaM-AC1"}, {Name: "PDEact", Doc: "active PDE = cAMP-PDE -- buffered to 1"}, {Name: "ATP", Doc: "ATP -- buffered to 10000"}, {Name: "CAMP", Doc: "cAMP"}, {Name: "AMP", Doc: "AMP -- buffered to 1000"}, {Name: "R2C2", Doc: "R2C2"}, {Name: "R2C2_B", Doc: "R2C2-cAMP_B"}, {Name: "R2C2_BB", Doc: "R2C2-2cAMP-B-B"}, {Name: "R2C2_AB", Doc: "R2C2-2cAMP-A-B"}, {Name: "R2C2_ABB", Doc: "R2C2-3cAMP-A-B-B"}, {Name: "R2C2_4", Doc: "R2C2-4cAMP"}, {Name: "R2C_3", Doc: "R2C-3cAMP -- note Fig SI4 mislabeled as R2-3"}, {Name: "R2C_4", Doc: "R2C-4cAMP"}, {Name: "R2_3", Doc: "R2-3cAMP"}, {Name: "R2_4", Doc: "R2-4cAMP"}, {Name: "PKAact", Doc: "active PKA"}, {Name: "AC1ATPC", Doc: "AC1act+ATP complex for AC1ATP enzyme reaction -- reflects rate"}, {Name: "PDEcAMPC", Doc: "PDEact+cAMP complex for PDEcAMP enzyme reaction"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PKAState", IDName: "pka-state", Doc: "PKAState is overall intracellular Ca-driven signaling states\nfor PKA binding and phosphorylation with cAMP\n32 state vars total", Fields: []types.Field{{Name: "Cyt", Doc: "in cytosol -- volume = 0.08 fl = 48"}, {Name: "PSD", Doc: "in PSD -- volume = 0.02 fl = 12"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PKAParams", IDName: "pka-params", Doc: "PKAParams are the parameters governing the\nPKA binding and phosphorylation with cAMP", Fields: []types.Field{{Name: "CaMAC1", Doc: "1: 3Ca-CaM + AC1 -> AC1act"}, {Name: "ATPcAMP", Doc: "2: basal activity of ATP -> cAMP without AC1 enzyme"}, {Name: "R2C2_B", Doc: "3: R2C2 + cAMP = cAMP-bind-site-B"}, {Name: "R2C2_B1", Doc: "4: R2C2-cAMP B + cAMP -> BB = cAMP-bind-site-B[1]"}, {Name: "R2C2_A1", Doc: "5: R2C2-cAMP B + cAMP -> AB = cAMP-bind-site-A[1]"}, {Name: "R2C2_A2", Doc: "6: R2C2-cAMP BB + cAMP -> ABB = cAMP-bind-site-A[2]"}, {Name: "R2C2_B2", Doc: "7: R2C2-cAMP AB + cAMP -> ABB = cAMP-bind-site-B[2]"}, {Name: "R2C2_A", Doc: "8: R2C2-cAMP ABB + cAMP -> 4 = cAMP-bind-site-A"}, {Name: "R2C_A3", Doc: "9: R2C-3cAMP -> R2C-4cAMP = cAMP-bind-site-A[3]"}, {Name: "R2_A4", Doc: "10: R2-3cAMP -> R2-4cAMP = cAMP-bind-site-A[4]"}, {Name: "R2C_3", Doc: "11: R2C-3cAMP + PKAact -> R2C2-3cAMP ABB (backwards) = Release-C1[1] -- Fig SI4 R2-3 -> R2C-3"}, {Name: "R2C_4", Doc: "12: R2C-4cAMP + PKAact -> R2C2-4cAMP (backwards) = Release-C1"}, {Name: "R2_3", Doc: "13: R2-3cAMP + PKAact -> R2C-3cAMP (backwards) = Release-C2[1]"}, {Name: "R2_4", Doc: "14: R2-4cAMP + PKAact -> R2C-4cAMP (backwards) = Release-C2"}, {Name: "AC1ATP", Doc: "15: AC1act catalyzing ATP -> cAMP -- table SIg numbered 9 -> 15 -- note: uses EnzRate not std Enz -- does not consume AC1act"}, {Name: "PDEcAMP", Doc: "16: PDE1act catalyzing cAMP -> AMP -- table SIg numbered 10 -> 16"}, {Name: "PKADiffuse", Doc: "PKA diffusion between Cyt and PSD"}, {Name: "CAMPDiffuse", Doc: "cAMP diffusion between Cyt and PSD"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PP1Vars", IDName: "pp1-vars", Doc: "PP1Vars are intracellular Ca-driven signaling variables for the\nPP1 - I-1 system", Fields: []types.Field{{Name: "I1", Doc: "dephosphorylated I-1 = I1_inactive"}, {Name: "I1P", Doc: "phosphorylated (active) I-1 = I1_active"}, {Name: "PP1_I1P", Doc: "PP1 = protein phosphatase 1 bound with I-1P"}, {Name: "PP1act", Doc: "activated PP1"}, {Name: "PKAI1C", Doc: "PKA+I1 complex for PKAI1 enzyme reaction"}, {Name: "CaNI1PC", Doc: "CaN+I1P complex for CaNI1P enzyme reaction"}, {Name: "PP2AI1PC", Doc: "PP2A+I1P complex for PP2AI1P enzyme reaction"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PP1State", IDName: "pp1-state", Doc: "PP1State is overall intracellular Ca-driven signaling states\nfor PP1-I-1 in Cyt and PSD\n14 state vars total", Fields: []types.Field{{Name: "Cyt", Doc: "in cytosol -- volume = 0.08 fl"}, {Name: "PSD", Doc: "in PSD -- volume = 0.02 fl"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PP1Params", IDName: "pp1-params", Doc: "PP1Params are the parameters governing the PP1-I-1 binding", Fields: []types.Field{{Name: "I1PP1", Doc: "1: I-1P + PP1act -> PP1-I1P -- Table SIi constants are backward = I1-PP1"}, {Name: "PKAI1", Doc: "2: I-1P phosphorylated by PKA -- Table SIj numbers != Figure SI4"}, {Name: "CaNI1P", Doc: "3: I-1P dephosphorylated by CaN -- Table SIj number"}, {Name: "PP2aI1P", Doc: "4: I-1P dephosphorylated by PP2A -- Table SIj number"}, {Name: "I1Diffuse", Doc: "I1 diffusion between Cyt and PSD"}, {Name: "PP1Diffuse", Doc: "PP1 diffusion between Cyt and PSD"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Modes", IDName: "modes", Doc: "Modes are the looping modes (Stacks) for running and statistics."})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Levels", IDName: "levels", Doc: "Levels are the looping levels for running and statistics."})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.StatsPhase", IDName: "stats-phase", Doc: "StatsPhase is the phase of stats processing for given mode, level.\nAccumulated values are reset at Start, added each Step."})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Sim", IDName: "sim", Doc: "Sim encapsulates the entire simulation model, and we define all the\nfunctionality as methods on this struct.  This structure keeps all relevant\nstate information organized and available without having to pass everything around\nas arguments to methods, and provides the core GUI interface (note the view tags\nfor the fields which provide hints to how things should be displayed).", Fields: []types.Field{{Name: "Stim", Doc: "Stim determines the stimulation protocol to drive the Neuron with."}, {Name: "Urakubo", Doc: "Urakubo contains all the urakubo model state and parameters."}, {Name: "Config", Doc: "simulation configuration parameters -- set by .toml config file and / or args"}, {Name: "Root", Doc: "Root is the root tensorfs directory, where all stats and other misc sim data goes."}, {Name: "Stats", Doc: "Stats has the stats directory within Root."}, {Name: "GUI", Doc: "GUI manages all the GUI elements"}, {Name: "RandSeeds", Doc: "RandSeeds is a list of random seeds to use for each run."}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.CaSigState", IDName: "ca-sig-state", Doc: "CaSigState is entire intracellular Ca-driven signaling state\nTotal state vars: 2 + 32 + 14 + 32 + 14 + 1 = 95", Fields: []types.Field{{Name: "Ca", Doc: "Ca state"}, {Name: "CaM", Doc: "CaM calmodulin state"}, {Name: "CaMKII", Doc: "CaMKII state"}, {Name: "CaN", Doc: "CaN = calcineurin state"}, {Name: "PKA", Doc: "PKA = protein kinase A"}, {Name: "PP1", Doc: "PP1 = protein phosphatase 1"}, {Name: "PP2A", Doc: "PP2A = protein phosphatase 2A, only in Cyt"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.SpineState", IDName: "spine-state", Doc: "SpineState is entire state of spine including Ca signaling and AMPAR\nTotal state vars: 95 + 20 = 115", Fields: []types.Field{{Name: "Time", Doc: "internal time counter, in seconds, incremented by Dt"}, {Name: "NMDAR", Doc: "NMDA receptor state"}, {Name: "CaSig", Doc: "calcium signaling systems"}, {Name: "AMPAR", Doc: "AMPA receptor state"}, {Name: "VmS", Doc: "Vm in spine"}, {Name: "PreSpike", Doc: "discrete spike firing -- 0 = no spike, 1 = spike"}, {Name: "PreSpikeT", Doc: "time of last spike firing -- needed to prevent repeated spiking from same singal"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Spine", IDName: "spine", Doc: "Spine represents all of the state and parameters of the Spine\ninvolved in LTP / LTD", Fields: []types.Field{{Name: "NMDAR", Doc: "NMDA receptors"}, {Name: "Ca", Doc: "Ca buffering and diffusion parameters"}, {Name: "CaM", Doc: "CaM calmodulin Ca binding parameters"}, {Name: "CaMKII", Doc: "CaMKII parameters"}, {Name: "CaN", Doc: "CaN calcineurin parameters"}, {Name: "PKA", Doc: "PKA = protein kinase A parameters"}, {Name: "PP1", Doc: "PP1 = protein phosphatase 1 parameters"}, {Name: "AMPAR", Doc: "AMPAR parameters"}, {Name: "States", Doc: "the current spine states"}, {Name: "Deltas", Doc: "the derivative changes in spine states"}}})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Stims", IDName: "stims", Doc: "Stims are the stimulus functions."})

var _ = types.AddType(&types.Type{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.Urakubo", IDName: "urakubo", Doc: "Urakubo has all of the state for the Urakubo model.", Fields: []types.Field{{Name: "Stim", Doc: "Stim determines the stimulation protocol to drive the Neuron with."}, {Name: "Net", Doc: "Net is the axon network for basic activity dynamics"}, {Name: "Spine", Doc: "the spine state with Urakubo intracellular model"}, {Name: "NeuronEx", Doc: "extra neuron state for additional channels: Vgcc, AK"}, {Name: "InitBaseline", Doc: "whether to initialize values to known baseline values at start"}, {Name: "ISISec", Doc: "inter-stimulus-interval in seconds -- between reps"}, {Name: "NReps", Doc: "number of repetitions -- takes 100 to produce classic STDP"}, {Name: "FinalSecs", Doc: "number of seconds to run after the manipulation -- results are strongest after 100,\ndecaying somewhat after that point -- 20 shows similar qualitative results but weaker,\n50 is pretty close to 100 -- less than 20 not recommended."}, {Name: "DurMsec", Doc: "duration for activity window"}, {Name: "SendHz", Doc: "sending firing frequency (used as minus phase for ThetaErr)"}, {Name: "RecvHz", Doc: "receiving firing frequency (used as plus phase for ThetaErr)"}, {Name: "GeStim", Doc: "stimulating current injection"}, {Name: "DeltaT", Doc: "in msec, difference of Tpost - Tpre == pos = LTP, neg = LTD STDP"}, {Name: "DeltaTRange", Doc: "range for sweep of DeltaT -- actual range is - to +"}, {Name: "DeltaTInc", Doc: "increment for sweep of DeltaT"}, {Name: "RGClamp", Doc: "use Ge current clamping instead of distrete pulsing for firing rate-based manips, e.g., ThetaErr"}, {Name: "VmDend", Doc: "use dendritic Vm signal for driving spine channels"}, {Name: "NMDAAxon", Doc: "use the Axon NMDA channel instead of the allosteric Urakubo one"}, {Name: "NMDAGbar", Doc: "strength of NMDA current -- 0.15 default for posterior cortex"}, {Name: "GABABGbar", Doc: "strength of GABAB current -- 0.2 default for posterior cortex"}, {Name: "VgccGbar", Doc: "strength of Vgcc current -- 1.46 for distal per Migliore, but 0.12 reproduces net Ca current.."}, {Name: "CaTarg", Doc: "target calcium level for CaTarg stim"}, {Name: "InitWt", Doc: "initial weight value: Trp_AMPA value at baseline"}, {Name: "Msec", Doc: "current cycle of updating"}, {Name: "Stats"}, {Name: "GUI"}, {Name: "StimFuncs"}}})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.NewConfig", Returns: []string{"Config"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.RunSim", Doc: "RunSim runs the simulation as a standalone app\nwith given configuration.", Args: []string{"cfg"}, Returns: []string{"error"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.EmbedSim", Doc: "EmbedSim runs the simulation with default configuration\nembedded within given body element.", Args: []string{"b"}, Returns: []string{"Sim"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.init"})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.RGeStimForHz", Args: []string{"hz"}, Returns: []string{"float32"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.PerMsec", Doc: "PerMsec returns per msec for given input data", Args: []string{"orig"}, Returns: []string{"[]float64"}})

var _ = types.AddFunc(&types.Func{Name: "github.com/CompCogNeuro/CompCogNeuro.github.io/sims/urakubo.NewUrakubo", Returns: []string{"Urakubo"}})
